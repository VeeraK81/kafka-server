# version: "3.7"
# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:5.5.3
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181

#   kafka:
#     image: confluentinc/cp-enterprise-kafka:5.5.3
#     depends_on:
#       - zookeeper

#     ports:
#       - 29092:29092
#       - 9092:9092
      
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT


#   debezium:
#     image: debezium/connect:1.4
#     environment:
#       BOOTSTRAP_SERVERS: kafka:9092
#       GROUP_ID: 1
#       CONFIG_STORAGE_TOPIC: connect_configs
#       OFFSET_STORAGE_TOPIC: connect_offsets
#       KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
#       VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#       CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#       CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#     depends_on: [kafka]
#     ports:
#       - 8083:8083

#   schema-registry:
#     image: confluentinc/cp-schema-registry:5.5.3
#     environment:
#       - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
#       - SCHEMA_REGISTRY_HOST_NAME=schema-registry
#       - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
#     ports:
#       - 8081:8081
#     depends_on: [zookeeper, kafka]
  
#   kafka_manager:
#     image: hlebalbau/kafka-manager:stable
#     restart: always
#     ports:
#       - "9000:9000"
#     depends_on:
#       - zookeeper
#       - kafka
#     environment:
#       ZK_HOSTS: "zookeeper:2181"
#       APPLICATION_SECRET: "random-secret"
#     command: -Dpidfile.path=/dev/null

#   python-consumer:
#     build:
#       context: .
#       dockerfile: Dockerfile  # Points to the Dockerfile provided above
#     volumes:
#       - .:/home/app
#     environment:
#       KAFKA_BROKER: "kafka:9092"
#       KAFKA_TOPIC: "source.public.experiments"  # Update if your topic name is different
#     depends_on:
#       - kafka
#       - schema-registry
#       - debezium
#       - zookeeper
#     restart: always

version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper  # Zookeeper data persistence

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://<KAFKA_PUBLIC_IP>:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - kafka-data:/var/lib/kafka  # Kafka data persistence

  debezium:
    image: debezium/connect:1.4
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [kafka]
    ports:
      - 8083:8083
    volumes:
      - debezium-data:/data  # Debezium data persistence
    restart: always

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on: [zookeeper, kafka]

  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null

  python-consumer:
    build:
      context: .
      dockerfile: Dockerfile  # Points to the Dockerfile provided above
    environment:
      KAFKA_BROKER: "kafka:9092"
      KAFKA_TOPICS: ${KAFKA_TOPICS}  # Update if your topic name is different
    depends_on:
      - kafka
      - schema-registry
      - debezium
      - zookeeper
    restart: always

volumes:
  zookeeper-data:
    external: true
  kafka-data:
    external: true
  debezium-data:
    external: true

